// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

enum UserRole {
  ADMIN
  USER
}

enum gender {
  Male
  Female
}

model User {
  id            String    @id @default(auto()) @map("_id") @db.ObjectId
  firstname     String
  lastname      String
  username      String    @unique
  gender        gender
  email         String    @unique
  password      String
  emailVerified DateTime?
  image         String?
  role          UserRole  @default(USER)

  gamesAsWhitePlayer Game[] @relation("whitePlayer")
  gamesAsBlackPlayer Game[] @relation("blackPlayer")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model VerificationToken {
  id      String   @id @default(auto()) @map("_id") @db.ObjectId
  email   String
  token   String   @unique
  expires DateTime

  @@unique([email, token])
}

model PasswordResetToken {
  id      String   @id @default(auto()) @map("_id") @db.ObjectId
  email   String
  token   String   @unique
  expires DateTime

  @@unique([email, token])
}

model Game {
  id            String   @id @default(auto()) @map("_id") @db.ObjectId
  fen           String // FEN string to represent board state
  status        String // Game status ("ongoing", "checkmate", "draw", etc.)
  whitePlayerId String   @db.ObjectId
  whitePlayer   User     @relation("whitePlayer", fields: [whitePlayerId], references: [id])
  blackPlayerId String   @db.ObjectId
  blackPlayer   User     @relation("blackPlayer", fields: [blackPlayerId], references: [id])
  currentPlayer String
  moves         Move[]
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

model Move {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  gameId    String   @db.ObjectId
  game      Game     @relation(fields: [gameId], references: [id])
  playerId  String   @db.ObjectId
  san       String
  from      String
  to        String
  piece     String
  color     String
  flags     String
  before    String
  after     String
  createdAt DateTime @default(now())
}
